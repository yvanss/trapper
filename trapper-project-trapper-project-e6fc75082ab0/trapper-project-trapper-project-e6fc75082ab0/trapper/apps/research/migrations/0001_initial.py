# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-06-07 13:55
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import trapper.apps.common.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('storage', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ResearchProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('acronym', models.CharField(max_length=10, unique=True)),
                ('description', trapper.apps.common.fields.SafeTextField(blank=True, max_length=2000, null=True)),
                ('abstract', trapper.apps.common.fields.SafeTextField(blank=True, max_length=2000, null=True)),
                ('methods', trapper.apps.common.fields.SafeTextField(blank=True, max_length=2000, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('status', models.NullBooleanField(choices=[(None, b'Not yet processed'), (False, b'Rejected'), (True, b'Approved')])),
                ('status_date', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['-status_date'],
            },
        ),
        migrations.CreateModel(
            name='ResearchProjectCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='storage.Collection')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='research.ResearchProject')),
            ],
            options={
                'ordering': ['collection__name'],
            },
        ),
        migrations.CreateModel(
            name='ResearchProjectRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.SmallIntegerField(choices=[(1, b'Admin'), (2, b'Expert'), (3, b'Collaborator')])),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_roles', to='research.ResearchProject')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_project_roles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='researchproject',
            name='collections',
            field=models.ManyToManyField(blank=True, related_name='research_projects', through='research.ResearchProjectCollection', to='storage.Collection'),
        ),
        migrations.AddField(
            model_name='researchproject',
            name='keywords',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='researchproject',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_projects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='researchprojectrole',
            unique_together=set([('project', 'user')]),
        ),
    ]
