upstream trapper_server {
  server unix:/home/web/trapper/run/gunnicorn.sock fail_timeout=0;
}

server {
    listen 443 ssl;
    server_name trapper.pl;

    ssl                  on;
    ssl_certificate      /etc/nginx/cert/trapper.pl/trapper.pl.crt;
    ssl_certificate_key  /etc/nginx/cert/trapper.pl/trapper.pl.key;

    client_max_body_size 4G;

    access_log /var/log/nginx/trapper_access.log;
    error_log /var/log/nginx/trapper_error.log;

    location /static/ {
        alias   /home/web/trapper/static/;
    }

    location /site_media/ {
        alias   /home/web/trapper/media/;
    }

    location / {
        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        proxy_set_header X-Forwarded-Proto https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

        # set "proxy_buffering off" *only* for Rainbows! when doing
        # Comet/long-poll stuff.  It's also safe to set if you're
        # using only serving fast clients with Unicorn + nginx.
        # Otherwise you _want_ nginx to buffer responses to slow
        # clients, really.
        # proxy_buffering off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        proxy_pass http://trapper_server;
    }
}
